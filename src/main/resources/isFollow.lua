---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by luo20.
--- DateTime: 2025/9/6 14:03
---
-- 关注操作的Lua脚本
-- KEYS[1] : 用户关注集合的key (hm-DianPing:follow:userFollow:)
-- KEYS[2] : 用户取消关注记录key (记录已取消关注的用户)
-- KEYS[3] : 用户发布博客的key (hm-DianPing:blog:add:)
-- KEYS[4] : 博客粉丝的key (hm-DianPing:blog:fans:)
-- ARGV[1] : 被关注用户id(博客id)
-- ARGV[2] : 操作类型 (1表示关注，0表示取消关注)
-- ARGV[3] : 用户id (粉丝)
local followKey = KEYS[1]
local unfollowKey = KEYS[2]
local userBlogKey = KEYS[3]
local blogFansKey = KEYS[4]
local followUserId = ARGV[1]
local isFollow = tonumber(ARGV[2])
local userId = ARGV[3]
-- 判断用户博客是否存在
local blogExists = redis.call('hget', userBlogKey,'user_id')
if (isFollow == 1) then
    --先判断要关注的用户博客是否存在
    if (blogExists == 0 or blogExists == false) then
        return { 0, "用户博客不存在！" }
    end
    -- 关注操作
    local isFollowed = redis.call('sismember', followKey, followUserId)
    if (isFollowed == 1) then
        -- 已经关注，返回重复关注错误
        return { 1, "您已经关注过该用户！" }
    else
        -- 移除取消关注记录
        redis.call('srem', unfollowKey, followUserId)
        -- 添加关注关系 (当前用户(粉丝) -> 博客)
        redis.call('sadd', followKey, followUserId)
        -- 添加粉丝(博客id -> 粉丝id)
        redis.call('sadd', blogFansKey,userId)
        return { 2, "关注成功！" }
    end
else
    --先判断要取注的用户博客是否存在
    if (blogExists == 0 or blogExists == false) then
        return { 0, "用户博客不存在！" }
    end
    -- 取消关注操作
    local isUnfollowed = redis.call('sismember', unfollowKey, followUserId)
    if (isUnfollowed == 1) then
        -- 已经取消关注，返回重复取消关注错误
        return { -1, "您已取消关注过用户！" }
    else
        -- 没有取消关注，添加取消关注记录
        -- 记录取消关注
        redis.call('sadd', unfollowKey, followUserId)
        -- 删除关注关系 (当前用户(粉丝) -> 博客)
        redis.call('srem', followKey, followUserId)
        -- 删除粉丝(博客 -> 粉丝)
        redis.call('srem', blogFansKey, userId)
        return { -2, "取消关注成功！" }
    end
end



